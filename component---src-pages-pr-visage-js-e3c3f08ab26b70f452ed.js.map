{"version":3,"sources":["webpack:///component---src-pages-pr-visage-js-e3c3f08ab26b70f452ed.js","webpack:///./src/pages/pr_visage.js"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"/Users/Astraeus/Documents/repos/website/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/Users/Astraeus/Documents/repos/website/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/Astraeus/Documents/repos/website/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[[\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":\"commonjs\",\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-stage-0/lib/index.js\",\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/pr_visage.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_navigoat","_navigoat2","_pr_page","_pr_page2","createElement","active_tab","title","paper_title","authors","abstract","paper_linky","paper_img","img_caption","video_linky"],"mappings":"AAAAA,cAAc,iBAERC,o2BACA,SAAUC,EAAQC,EAASC,GAEhC,YAoBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAlBvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,iCDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,uCACAQ,GDaoBP,EAAuBM,GCb3CP,EAAA,8BDiBKS,EAAaR,EAAuBO,GChBzCE,EAAAV,EAAA,4BDoBKW,EAAYV,EAAuBS,EAIvCX,GAAQK,QCtBM,iBACbE,GAAAF,QAAAQ,cAAA,WACEN,EAAAF,QAAAQ,cAAAH,EAAAL,SAAUS,WAAW,UACrBP,EAAAF,QAAAQ,cAAAD,EAAAP,SAAaU,MAAQ,uCACRC,YAAc,4CACdC,QAAU,kGACVC,SAAW,0kCACXC,YAAc,4BACdC,UAAY,iCACZC,YAAc,2qBACdC,YAAc,sDD6B9BvB,EAAOC,QAAUA,EAAiB","file":"component---src-pages-pr-visage-js-e3c3f08ab26b70f452ed.js","sourcesContent":["webpackJsonp([254897948518206],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"/Users/Astraeus/Documents/repos/website/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/Users/Astraeus/Documents/repos/website/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/Astraeus/Documents/repos/website/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[[\\\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-env/lib/index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/Users/Astraeus/Documents/repos/website/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/pr_visage.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(\"./node_modules/gatsby-link/index.js\");\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _navigoat = __webpack_require__(\"./src/layouts/navigoat.js\");\n\t\n\tvar _navigoat2 = _interopRequireDefault(_navigoat);\n\t\n\tvar _pr_page = __webpack_require__(\"./src/layouts/pr_page.js\");\n\t\n\tvar _pr_page2 = _interopRequireDefault(_pr_page);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function () {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_navigoat2.default, { active_tab: 'projs' }),\n\t    _react2.default.createElement(_pr_page2.default, { title: 'VISAGE: VISual Adaptive Graph Engine',\n\t      paper_title: 'VISAGE: Interactive Visual Graph Querying',\n\t      authors: 'Robert Pienta, Acar Tamersoy, Alex Endert, Shamkant Navathe, Hanghang Tong, and Duen Horng Chau',\n\t      abstract: 'Extracting useful patterns from large network datasets has become a fundamental challenge in many domains. We present VISAGE, an interactive visual graph querying approach that empowers users to construct expressive queries, without writing complex code (e.g., finding money laundering rings of bankers and business owners). Our contributions are as follows: (1) we introduce graph autocomplete, an interactive approach that guides users to construct and refine queries, preventing over-specification; (2) VISAGE guides the construction of graph queries using a data-driven approach, enabling users to specify queries with varying levels of specificity, from concrete and detailed (e.g., query by example), to abstract (e.g., with \\u201Cwildcard\\u201D nodes of any types), to purely structural matching; (3) a twelve-participant, within-subject user study demonstrates VISAGE\\u2019s ease of use and the ability to construct graph queries significantly faster than using a conventional query language; (4) VISAGE works on real graphs with over 468K edges, achieving sub-second response times for common queries.',\n\t      paper_linky: '../data/16-avi-visage.pdf',\n\t      paper_img: '../imgs/projs/pr-visage-cj.png',\n\t      img_caption: 'A screenshot of VISAGE showing an example graph query of films and actors related to George Lucas\\u2019 films. VISAGE consists of: (1) a query construction area, where users construct graph queries by placing nodes and edges; (2) an overview popup window that summarizes the desired features (constraints or conditions) of a query node (in green), and the features of a selected node in a match (e.g., the film THX 1138 in blue); a results pane, which shows a list of the results returned by the query. In this example, a user has specified a condition that the film must have a critics\\u2019 overview of \\u201CWell-rated\\u201D. The matches\\u2019 layouts (general shape) mirror that of the original query.',\n\t      video_linky: 'https://www.youtube.com/embed/l2L7Y5mCh1s?rel=0'\n\t    })\n\t  );\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-pr-visage-js-e3c3f08ab26b70f452ed.js","import React from 'react'\nimport Link from 'gatsby-link'\nimport Navigoat from '../layouts/navigoat.js'\nimport ProjectPage from '../layouts/pr_page.js'\n\nexport default () =>\n  <div>\n    <Navigoat active_tab='projs'/>\n    <ProjectPage title = 'VISAGE: VISual Adaptive Graph Engine'\n                 paper_title = 'VISAGE: Interactive Visual Graph Querying'\n                 authors = 'Robert Pienta, Acar Tamersoy, Alex Endert, Shamkant Navathe, Hanghang Tong, and Duen Horng Chau'\n                 abstract = 'Extracting useful patterns from large network datasets has become a fundamental challenge in many domains. We present VISAGE, an interactive visual graph querying approach that empowers users to construct expressive queries, without writing complex code (e.g., finding money laundering rings of bankers and business owners). Our contributions are as follows: (1) we introduce graph autocomplete, an interactive approach that guides users to construct and refine queries, preventing over-specification; (2) VISAGE guides the construction of graph queries using a data-driven approach, enabling users to specify queries with varying levels of specificity, from concrete and detailed (e.g., query by example), to abstract (e.g., with “wildcard” nodes of any types), to purely structural matching; (3) a twelve-participant, within-subject user study demonstrates VISAGE’s ease of use and the ability to construct graph queries significantly faster than using a conventional query language; (4) VISAGE works on real graphs with over 468K edges, achieving sub-second response times for common queries.'\n                 paper_linky = '../data/16-avi-visage.pdf'\n                 paper_img = '../imgs/projs/pr-visage-cj.png'\n                 img_caption = 'A screenshot of VISAGE showing an example graph query of films and actors related to George Lucas’ films. VISAGE consists of: (1) a query construction area, where users construct graph queries by placing nodes and edges; (2) an overview popup window that summarizes the desired features (constraints or conditions) of a query node (in green), and the features of a selected node in a match (e.g., the film THX 1138 in blue); a results pane, which shows a list of the results returned by the query. In this example, a user has specified a condition that the film must have a critics’ overview of “Well-rated”. The matches’ layouts (general shape) mirror that of the original query.'\n                 video_linky = 'https://www.youtube.com/embed/l2L7Y5mCh1s?rel=0'\n    />\n\n  </div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pr_visage.js"],"sourceRoot":""}